#include <stdlib.h> 
#include <sys/types.h> 
#include <sys/stat.h> 
#include <unistd.h> 
#include <stdbool.h> 
#include <fcntl.h> 
#include <termios.h> 
#include <stdio.h> 
#include <string.h> 
#include <signal.h> 
#include <pthread.h> 

void sigHandler(int _SIG); 

struct termios tm_Enc; 
int fd_Enc; 
bool loop = true; 
unsigned char c;

int readLine(int fd, char* str)
{
	int n = 0;
	int total = 0;
	do {
		n = read(fd, str, 1);
		total += n;
	} while(n > 0 && *str++ != '\n');
	return total;
}
 
int main(int argc, char** argv) {

bool mainloop = true;
int ret = 0;
int fd_IMU = 0;

    memset(&tm_Enc, 0, sizeof(tm_Enc)); 
    tm_Enc.c_iflag = 0; 
    tm_Enc.c_oflag = 0; 
    tm_Enc.c_cflag = CS8 | CREAD | CLOCAL; 
    tm_Enc.c_lflag = 0; 
    tm_Enc.c_cc[VMIN] = 0; 
    tm_Enc.c_cc[VTIME] = 1; 
    fd_IMU = open(argv[1], O_RDWR); 
    if (fd_IMU < 0) { 
        printf("Error : Cannot open Port %s \n", argv[1]);
        return 0; 
    } 
    cfsetospeed(&tm_Enc, B115200); 
    cfsetispeed(&tm_Enc, B115200); 
    tcsetattr(fd_IMU, TCSANOW, &tm_Enc); 
    
    printf("Start IMU : Baud : 115200bps\n");    
	
    char bufIMU[256];
    while (mainloop) { 
		memset(bufIMU, 0x00, sizeof(bufIMU));
		if((ret = readLine(fd_IMU,  bufIMU)) < 0)
		{
			printf("read error : %d\n",ret);
			exit(-1);
		}
		if(ret == 0) {
		}
		else
		{
			
			printf("%s\n",bufIMU);
		} 
	}

    printf("Terminate Program.\n"); 
    return 1; 
} 




실행명령어 "./a.out /dev/ttyACM2"